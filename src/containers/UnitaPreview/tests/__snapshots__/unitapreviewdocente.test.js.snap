// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SelectBtn /> should render its css w/ props theme 1`] = `
.c0 {
  position: relative;
}

.c0 select {
  color: red;
  padding: 7px 30px 7px 25px;
}

.c0 svg {
  fill: red;
}

@media (max-width:64em) {
  .c0 select {
    padding: 9px 30px 9px 25px;
  }
}

<SelectField
  className="c0"
  theme={
    Object {
      "brand": "red",
    }
  }
>
  <option
    value="value 1"
  >
    Value1
  </option>
  <option
    value="Value 2"
  >
    Value 2
  </option>
</SelectField>
`;

exports[`<UnitBlock /> should render its last-child css w/ props theme 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0:last-child {
  margin-bottom: 30px;
}

@media (min-width:64.0625em) {
  .c0 {
    min-height: 180px;
    width: 50%;
    max-width: 50%;
  }

  .c0:last-child {
    border-left: 1px solid yellow;
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center;
    margin-bottom: 0;
  }
}

<FlexBox__FlexChild
  className="c0"
  disabled={true}
  theme={
    Object {
      "light": "yellow",
    }
  }
>
  <div>
    div 1
  </div>
  <div>
    div 2
  </div>
  <div>
    div 3
  </div>
</FlexBox__FlexChild>
`;

exports[`<UnitButton /> should render its css w/ props theme if disabled 1`] = `
.c0 {
  width: 96px;
  height: 96px;
  padding: 0;
  text-align: center;
  background-color: rgb(245,194,35);
  box-shadow: 0 0 0 6px rgba(0,0,0,0.1);
}

.c0 svg {
  width: 32px;
  height: 39px;
  margin: 0;
  fill: #fff;
}

.c0:disabled {
  background-color: green;
  box-shadow: 0 0 0 6px rgba(255,255,255,0.5);
}

<Button
  actioncolor=""
  className="c0"
  disabled={true}
  theme={
    Object {
      "brand": "green",
    }
  }
>
  <span>
    Button
  </span>
</Button>
`;

exports[`<UnitaPreviewDocenteView /> visualizzo elementi di gestione della classe 1`] = `
<form
  onSubmit={[Function]}
>
  <UnitaPreviewDocente__UnitBlockWrap>
    <UnitaPreviewDocente__UnitBlock
      theme={
        Object {
          "light": "#C9E4FF",
        }
      }
    >
      <FormElements__FormElement>
        <Paragraph
          margin="0 auto 18px"
          theme={
            Object {
              "brand": "#00BBEF",
              "darken": "#1588AA",
            }
          }
        >
          Seleziona una lezione per provarla
        </Paragraph>
        <StyledButtonGroup__MiniButtonGroup
          theme={
            Object {
              "radius": Object {
                "buttons": "6px",
              },
            }
          }
        >
          <Field
            arrowColor="rgb(96, 96, 96)"
            bgColor="#fff"
            border="1px solid #fff"
            color="rgb(96, 96, 96)"
            component={[Function]}
            name="lezione"
            radius="30px"
          >
            <option
              id="lezione_0"
              key="lezione_0"
              value={0}
            >
              lezione1
            </option>
            <option
              id="lezione_1"
              key="lezione_1"
              value={1}
            >
              lezione2
            </option>
            <option
              id="lezione_2"
              key="lezione_2"
              value={2}
            >
              lezione3
            </option>
          </Field>
          <UnitaPreviewDocente__StretchButton
            actioncolor="okay"
            border="1px solid white"
            disabled={false}
            padding="8px 25px"
            type="submit"
          >
            <Svg
              fill="#fff"
              height="18px"
              path={
                <path
                  d="M.657 8.25h14.917L8.558 1.183C8.286.91 8.286.47 8.563.202c.272-.27.708-.267.975 0L17.8 8.528c.268.27.268.708-.004.98L9.533 17.8c-.135.135-.313.2-.487.2-.18 0-.352-.065-.488-.2-.272-.273-.272-.71 0-.98L15.6 9.75H.658C.29 9.75 0 9.413 0 9s.29-.75.657-.75"
                  fillRule="evenodd"
                />
              }
              viewBox="0 0 18 18"
              width="18px"
            />
          </UnitaPreviewDocente__StretchButton>
        </StyledButtonGroup__MiniButtonGroup>
      </FormElements__FormElement>
    </UnitaPreviewDocente__UnitBlock>
    <UnitaPreviewDocente__UnitBlock
      theme={
        Object {
          "light": "#C9E4FF",
        }
      }
    >
      <Paragraph
        margin="0 auto 18px"
        theme={
          Object {
            "brand": "#00BBEF",
            "darken": "#1588AA",
          }
        }
      >
        label button assegnazione
      </Paragraph>
      <UnitaPreviewDocente__UnitButton
        disabled={false}
        onClick={[Function]}
      >
        <Svg
          height="18px"
          path={
            <path
              d="M28 15.744V24l3 5H5l3-5v-8.256c.215-5.13 3.621-9.239 8.04-10.325V4.256C16.04 3 16.72 2 18.02 2 19.32 2 20 3 20 4.256V5.42c4.42 1.086 7.785 5.196 8 10.325zM18 34a3 3 0 0 1-3-3h6a3 3 0 0 1-3 3z"
              fillRule="nonzero"
            />
          }
          viewBox="0 0 36 36"
          width="18px"
        />
      </UnitaPreviewDocente__UnitButton>
    </UnitaPreviewDocente__UnitBlock>
  </UnitaPreviewDocente__UnitBlockWrap>
  <UnitaPreviewDocente__LastP>
    Tempo di esecuzione stimato:
    <br />
    circa 
    40
     minuti
  </UnitaPreviewDocente__LastP>
</form>
`;
